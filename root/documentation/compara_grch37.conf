<endpoints>
  <homology_symbol>
    description=Retrieves homology information (orthologs) by symbol
    endpoint=homology/symbol/:species/:symbol
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    output=orthoxml
    <params>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <symbol>
        type=String
        description=Symbol or display name of a gene
        example=__VAR(gene_symbol_compara37)__
        required=1
      </symbol>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas exist on a server for separate species divisions
        default=vertebrates
        example=vertebrates
      </compara>
      <external_db>
        type=String
        description=Filter by external database
        example=__VAR(gene_symbol_db)__
      </external_db>
      <format>
        type=Enum(full,condensed)
        description=Layout of the response
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, projections, all)
        description=The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Filter by species. Supports all species aliases
        example=__VAR(species)__
        example=__VAR(species_common)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Filter by taxon
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=1
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
      <cigar_line>
        type=Boolean
        description=Return the aligned sequence encoded in CIGAR format
        default=1
      </cigar_line>
    </params>
    <examples>
      <basic>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol_compara37)__
        content=application/json
      </basic>
      <orthoxml>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol_compara37)__
        content=text/x-orthoxml+xml
      </orthoxml>
      <format_xml>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol_compara37)__
        content=text/xml
        <params>
          type=orthologues
          format=condensed
        </params>
      </format_xml>
      <format_limits>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol_compara37)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
        </params>
      </format_limits>
      <format_limits_cdna>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol_compara37)__
        content=application/json
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
          sequence=cdna
        </params>
      </format_limits_cdna>
    </examples>
  </homology_symbol>
  <homology_ensemblgene>
    description=Retrieves homology information (orthologs) by Ensembl gene id
    endpoint=homology/id/:id
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    output=orthoxml
    <params>
      <id>
        type=String
        description=An Ensembl stable ID
        example=__VAR(compara_gene_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas exist on a server for separate species divisions
        default=vertebrates
        example=vertebrates
      </compara>
      <format>
        type=Enum(full, condensed)
        description=Layout of the response
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, projections, all)
        description=The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Filter by species. Supports all species aliases
        example=__VAR(species_common)__
        example=__VAR(target_species)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Filter by taxon
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=1
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
      <cigar_line>
        type=Boolean
        description=Return the aligned sequence encoded in CIGAR format
        default=1
      </cigar_line>
    </params>
    <examples>
      <basic>
        path=/homology/id/
        capture=__VAR(compara_gene_stable_id)__
        content=application/json
      </basic>
      <orthoxml>
        path=/homology/id/
        capture=__VAR(compara_gene_stable_id)__
        content=text/x-orthoxml+xml
      </orthoxml>
      <compara_xml>
        path=/homology/id/
        capture=__VAR(compara_gene_stable_id)__
        <params>
          compara=__VAR(compara)__
        </params>
        content=text/xml
      </compara_xml>
      <format_xml>
        path=/homology/id/
        capture=__VAR(compara_gene_stable_id)__
        content=text/xml
        <params>
          type=orthologues
          format=condensed
        </params>
      </format_xml>
      <orthoxml_limits>
        path=/homology/id/
        capture=__VAR(compara_gene_stable_id)__
        content=text/x-orthoxml+xml
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
        </params>
      </orthoxml_limits>
      <format_limits_cdna>
        path=/homology/id/
        capture=__VAR(compara_gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
          sequence=cdna
        </params>
      </format_limits_cdna>
    </examples>
  </homology_ensemblgene>
   <genomic_alignment_region>
    description=Retrieves genomic alignments as separate blocks based on a region and species
    endpoint=alignment/region/:species/:region
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    output=phyloxml
    <params>
      <region>
        type=String
        description=Query region. A maximum of 10Mb is allowed to be requested at any one time
        example=__VAR(sequence_region)__
        example=__VAR(sequence_region_negative)__
        example=__VAR(sequence_region_strandless)__
        required=1
      </region>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas exist on a server for separate species divisions
        default=vertebrates
        example=vertebrates
      </compara>
      <aligned>
        type=Boolean
	description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
	default=1
      </aligned>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. 
        example=hard
      </mask> 
      <species_set_group>
        type=String
        description=The species set group name of the multiple alignment. Should not be used with the species_set parameter. Use <a href="/documentation/info/compara_species_sets">/info/compara/species_sets/:method</a> with one of the methods listed above to obtain a valid list of group names.
        default=mammals
	example=mammals, amniotes, fish, sauropsids, murinae
      </species_set_group>
      <species_set>
        type=String
	description=The set of species used to define the pairwise alignment (multiple values). Should not be used with the species_set_group parameter. Use <a href="/documentation/info/compara_species_sets">/info/compara/species_sets/:method</a> with one of the methods listed above to obtain a valid list of species sets. Any valid alias may be used.
	example=homo_sapiens
	example=mus_musculus
      </species_set>
      <method>
        type=Enum(EPO, EPO_LOW_COVERAGE, PECAN, LASTZ_NET, BLASTZ_NET, TRANSLATED_BLAT_NET, CACTUS_HAL, CACTUS_HAL_PW)
	description=The alignment method
	default=EPO
	example=PECAN
      </method>
      <display_species_set>
        type=String
        description= Subset of species in the alignment to be displayed (multiple values). All the species in the alignment will be displayed if this is not set. Any valid alias may be used.
	example=human
	example=chimp
	example=gorilla
      </display_species_set>
      <compact>
        type=Boolean
	description= Applicable to EPO_LOW_COVERAGE alignments. If true, concatenate the low coverage species sequences together to create a single sequence. Otherwise, separates out all sequences.
	default=1
      </compact>
    </params>
    <examples>
      <basic>
        path=/alignment/region/
        capture=__VAR(genomic_alignment_species)__
        capture=__VAR(genomic_alignment_region)__
        content=application/json
	<params>
	  species_set_group=__VAR(genomic_alignment_group)__
        </params>
      </basic>
      <basic_xml>
        path=/alignment/region/
        capture=__VAR(genomic_alignment_species)__
        capture=__VAR(genomic_alignment_region)__
        content=text/x-phyloxml
	<params>
	  species_set_group=__VAR(genomic_alignment_group)__
        </params>
      </basic_xml>
      <json>
        path=/alignment/region/
        capture=__VAR(genomic_alignment_species)__
        capture=__VAR(genomic_alignment_pw_region)__
        content=application/json
  <params>
    method=__VAR(genomic_alignment_pw_method)__
    species_set=__VAR(genomic_alignment_species)__
    species_set=__VAR(genomic_alignment_species2)__
        </params>
      </json>
    </examples>
  </genomic_alignment_region>
  </endpoints>
