<endpoints>
  <sequence_id>
    description=Query for multiple types of Sequence by its stable identifier
    endpoint="sequence/id/:id"
    group=Sequences
    method=GET
    output=fasta
    output=json
    output=jsonp
    output=text
    output=yaml
    <params>
      <id>
        type=String
        description=The stable identifier of the entity you wish to retrieve sequence for and an optional inline format. See the parameter format for more information about supported file extensions
        example=ENSG00000157764
        example=ENSG00000157764.fasta
        required=1
      </id>
      <type>
        type=Enum(genomic,cds,cdna,protein)
        description=The type of sequence to retrieve. Used to inform the API of the type of sequence wanted. Defaults to genomic where applicable i.e. not translations. cdna refers to the spliced transcript sequence with UTR and cds refers to the spliced transcript sequence without UTR.
        default=genomic
        example=cds
      </type>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by. Only required if a stable ID is not unique to a species (not the case with Ensembl databases)
        example=homo_sapiens
      </species>
      <object_type>
        type=String
        description=Object type to restrict searches by. Only required if a stable ID is not unique to an object class (not the case with Ensembl databases)
        example=gene
      </object_type>
      <db_type>
        type=String
        description=Specify the database type. Only required if a stable ID is not unique to a single database class (not the case with Ensembl databases)
        example=core
      </db_type>
      <format>
        type=Enum(fasta)
        description=Format to retrieve data in. Also the same as the formats supported in the ID
        example=fasta
      </format>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic
        example=hard
      </mask>
      <expand_5prime>
        type=Int
        description=Expand the sequence upstream of the sequence by this many basepairs. Only available when using type=genomic
        example=1000
      </expand_5prime>
      <expand_3prime>
        type=Int
        description=Expand the sequence downstream of the sequence by this many basepairs. Only available when using type=genomic
        example=1000
      </expand_3prime>
    </params>
    <examples>
      <basic>
        path=/sequence/id/
        capture=ENSG00000157764
        content=text/fasta
      </basic>
      <cdna>
        path=/sequence/id/
        capture=ENST00000288602.fasta
        <params>
          type=cdna
        </params>
        content=text/plain
      </cdna>
      <cds>
        path=/sequence/id/
        capture=ENST00000288602.fasta
        <params>
          type=cds
        </params>
        content=text/plain
      </cds>
      <genomic>
        path=/sequence/id/
        capture=ENSE00001154485.fasta
        <params>
          type=genomic
        </params>
        content=text/plain
      </genomic>
      <genomic_extend>
        path=/sequence/id/
        capture=ENSE00001154485.fasta
        <params>
          type=genomic
          expand_5prime=10
        </params>
        content=text/plain
      </genomic_extend>
      <protein>
        path=/sequence/id/
        capture=ENSP00000288602
        content=application/json
      </protein>
      <ccds>
        path=/sequence/id/
        capture=CCDS5863.1.fasta
        <params>
          db_type=otherfeatures
          object_type=transcript
          species=human
          type=cds
        </params>
        content=text/fasta
      </ccds>
      <prediction>
        path=/sequence/id/
        capture=GENSCAN00000000001.fasta
        <params>
          object_type=predictiontranscript
          db_type=core
          type=protein
          species=human
        </params>
        content=application/json
      </prediction>
    </examples>
  </sequence_id>
  
  <sequence_region>
    description=Query for a region of genomic sequence based on its location
    endpoint="sequence/region/:species/:region"
    group=Sequences
    method=GET
    output=fasta
    output=json
    output=jsonp
    output=text
    output=yaml
    <params>
      <region>
        type=String
        description=The region to retrieve sequence for. A maximum of 10Mb is allowed to be requested at any one time
        example=X:1..1000:1
        example=X:1..1000:-1
        example=X:1..1000
        required=1
      </region>
      <species>
        type=String
        description=Registry name/aliases used to restrict searches by
        example=homo_sapiens
        example=human
        required=1
      </species>
      <format>
        type=Enum(fasta)
        description=Format to retrieve data in. Also the same as the formats supported in the ID
        example=fasta
      </format>
      <mask>
        type=Enum(hard,soft)
        description=Request the sequence masked for repeat sequences. Hard will mask all repeats as N's and soft will mask repeats as lowercased characters. Only available when using genomic
        example=hard
      </mask>
      <expand_5prime>
        type=Int
        description=Expand the sequence upstream of the sequence by this many basepairs. Only available when using type=genomic
        example=1000
      </expand_5prime>
      <expand_3prime>
        type=Int
        description=Expand the sequence downstream of the sequence by this many basepairs. Only available when using type=genomic
        example=1000
      </expand_3prime>
    </params>
    <examples>
      <basic>
        path=/sequence/region/
        capture=human
        capture=X:1_000_000..1_000_100:1
        <params>
          format=fasta
        </params>
        content=text/plain
      </basic>
      <negative>
        path=/sequence/region/
        capture=human
        capture=X:1_000_000..1_000_100:-1
        content=text/fasta
      </negative>
      <json>
        path=/sequence/region/
        capture=human
        capture=X:1_000_000..1_000_100
        content=application/json
      </json>
      <extends>
        path=/sequence/region/
        capture=human
        capture=X:1_000_000..1_000_100
        <params>
          expand_5prime=60
          expand_3prime=60
        </params>
        content=text/fasta
      </extends>
      <masking>
        path=/sequence/region/
        capture=human
        capture=X:1_000_000..1_000_300
        <params>
          mask=soft
        </params>
        content=text/fasta
      </masking>
    </examples>
  </sequence_region>
</endpoints>